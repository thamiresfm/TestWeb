# Nome do pipeline
name: 'Cypress Test Pipeline'

# Dispara o pipeline em eventos de push e pull requests
trigger:
  branches:
    include:
      - main
      - develop

# Pool de agentes (Windows)
pool:
  vmImage: 'windows-latest'

steps:
  # Etapa 1: Restaurar o cache do npm (usando o package-lock.json)
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      path: '$(Pipeline.Workspace)/node_modules'
      restoreKeys: |
        npm | "$(Agent.OS)"
    displayName: 'Restaurar cache do npm'

  # Etapa 2: Instalar Node.js
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Instalação do Node.js'

  # Etapa 3: Instalar dependências
  - script: |
      npm install
    displayName: 'Instalação das dependências'

  # Etapa 4: Configurar o Cypress
  - script: |
      npx cypress install
      npx cypress verify
    displayName: 'Configuração do Cypress'

  # Etapa 5: Executar os testes
  - script: |
      npx cypress run
    displayName: 'Executando os testes do Cypress'

  # Etapa 6: Publicar resultados dos testes
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/results/*.xml'
      testRunTitle: 'Resultados dos Testes Cypress'

  # Etapa 7: Salvar o cache do npm
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      path: '$(Pipeline.Workspace)/node_modules'
      cacheHitVar: 'CACHE_RESTORED'
    displayName: 'Salvar cache do npm'
